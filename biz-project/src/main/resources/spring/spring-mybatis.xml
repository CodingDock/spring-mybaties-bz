<?xml version="1.0" encoding="UTF-8"?>
<beans default-lazy-init="false"
	   xmlns="http://www.springframework.org/schema/beans" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	   xmlns:tx="http://www.springframework.org/schema/tx"
	   xsi:schemaLocation="http://www.springframework.org/schema/beans
        http://www.springframework.org/schema/beans/spring-beans.xsd
		http://www.springframework.org/schema/tx
		http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
	   ">


	<!--**********************mysql  druid数据源相关配置*************************-->


	<bean id="masterDataSource" class="com.alibaba.druid.pool.DruidDataSource"
		init-method="init" destroy-method="close">
		<!-- 基本属性 url、user、password -->
		<property name="url" value="${jdbc.master.url}"/>
		<property name="username" value="${jdbc.username}" />
		<property name="password" value="${jdbc.password}" />
		<property name="driverClassName" value="com.mysql.jdbc.Driver" />
		
		
		<!-- 配置初始化大小、最小、最大 -->
		<property name="initialSize" value="10" />
		<property name="minIdle" value="10" />
		<property name="maxActive" value="100" />

		<!-- 配置获取连接等待超时的时间 timeout -->
		<property name="maxWait" value="10000"  />

		<!-- 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒 -->
		<property name="timeBetweenEvictionRunsMillis" value="60000" />
		<!--Statement执行超时时间 单位是秒 -->
		<property name="QueryTimeout" value="60" />
		<!-- 配置一个连接在池中最小生存的时间，单位是毫秒 -->
		<property name="minEvictableIdleTimeMillis" value="300000" />

		<property name="validationQuery" value="SELECT 'x'" />
		<property name="testWhileIdle" value="true" />
		<property name="testOnBorrow" value="false" />
		<property name="testOnReturn" value="false" />


		<property name="connectionProperties" value="druid.stat.slowSqlMillis=2000" />
		<!-- 配置防御sql注入-->
		<property name="filters" value="stat,wall" />
	</bean>


	<!-- ==========针对myBatis的配置项================= -->
	
	<!-- 配置sqlSessionFactory -->
	<bean id="masterSqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean">
		<!-- 实例化sqlSessionFactory时需要使用上述配置好的数据源以及SQL映射文件 -->
		<property name="dataSource" ref="masterDataSource" />
		<property name="mapperLocations" value="classpath*:/mappers/*Mapper.xml" />
		<property name="typeAliasesPackage" value="
			com.test.user.bean" />
	</bean>
	<bean id="masterSqlSessionTemplate" class="org.mybatis.spring.SqlSessionTemplate">
		<constructor-arg index="0" ref="masterSqlSessionFactory" />
	</bean>

	<!--註解sql方式-->
	<bean class="org.mybatis.spring.mapper.MapperScannerConfigurer">
		<property name="basePackage" value="com.mb2.dao" />
		<property name="sqlSessionFactoryBeanName" value="masterSqlSessionFactory" />
	</bean>

	<!-- ======spring  注解事务========= -->
	<!-- 配置Spring的事务管理器 -->
	<bean id="transactionManager" class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="masterDataSource" />
	</bean>

	<!-- 注解方式配置事物 -->
	 <tx:annotation-driven transaction-manager="transactionManager" />

	<!--<bean id="jdbcTemplate" class="org.springframework.jdbc.core.JdbcTemplate">-->
		<!--<property name = "dataSource" ref="masterDataSource"></property>-->
	<!--</bean>-->
	

</beans>